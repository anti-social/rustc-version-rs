var searchIndex={};
searchIndex["rustc_version"] = {"doc":"Simple library for getting the version information of a…","i":[[3,"Version","rustc_version","Represents a version number conforming to the semantic…",null,null],[12,"major","","The major version, to be incremented on incompatible…",0,null],[12,"minor","","The minor version, to be incremented when functionality is…",0,null],[12,"patch","","The patch version, to be incremented when…",0,null],[12,"pre","","The pre-release version identifier, if one exists.",0,null],[12,"build","","The build metadata, ignored when determining version…",0,null],[3,"VersionMeta","","Rustc version plus metada like git short hash and build…",null,null],[12,"semver","","Version of the compiler",1,null],[12,"commit_hash","","Git short hash of the build of the compiler",1,null],[12,"commit_date","","Commit date of the compiler",1,null],[12,"build_date","","Build date of the compiler; this was removed between Rust…",1,null],[12,"channel","","Release channel of the compiler",1,null],[12,"host","","Host target triple of the compiler",1,null],[12,"short_version_string","","Short version string of the compiler",1,null],[4,"Error","","The error type for this crate.",null,null],[13,"CouldNotExecuteCommand","","An error ocurrend when executing the `rustc` command.",2,null],[13,"Utf8Error","","The output of `rustc -vV` was not valid utf-8.",2,null],[13,"UnexpectedVersionFormat","","The output of `rustc -vV` was not in the expected format.",2,null],[13,"ReqParseError","","An error ocurred in parsing a `VersionReq`.",2,null],[13,"SemVerError","","An error ocurred in parsing the semver.",2,null],[13,"UnknownPreReleaseTag","","The pre-release tag is unknown.",2,null],[4,"Channel","","Release channel of the compiler.",null,null],[13,"Dev","","Development release channel",3,null],[13,"Nightly","","Nightly release channel",3,null],[13,"Beta","","Beta release channel",3,null],[13,"Stable","","Stable release channel",3,null],[5,"version","","Returns the `rustc` SemVer version.",null,[[],[["result",["version"]],["version"]]]],[5,"version_meta","","Returns the `rustc` SemVer version and additional metadata…",null,[[],[["versionmeta"],["result",["versionmeta"]]]]],[5,"version_meta_for","","Parses a \"rustc -vV\" output string and returns the SemVer…",null,[[["str"]],[["versionmeta"],["result",["versionmeta"]]]]],[6,"Result","","The result type for this crate.",null,null],[11,"for_command","","Returns the version metadata for `cmd`, which should be a…",1,[[["command"]],[["versionmeta"],["result",["versionmeta"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"partial_cmp","","",0,[[["version"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"clone","","",0,[[["self"]],["version"]]],[11,"from","","",0,[[],["version"]]],[11,"from","","",0,[[["version"]],["version"]]],[11,"from_str","","",0,[[["str"]],[["result",["version","semvererror"]],["semvererror"],["version"]]]],[11,"eq","","",0,[[["version"],["self"]],["bool"]]],[11,"cmp","","",0,[[["version"],["self"]],["ordering"]]],[11,"from","","",2,[[["utf8error"]],["error"]]],[11,"from","","",2,[[["semvererror"]],["error"]]],[11,"from","","",2,[[["reqparseerror"]],["error"]]],[11,"clone","","",3,[[["self"]],["channel"]]],[11,"clone","","",1,[[["self"]],["versionmeta"]]],[11,"cmp","","",3,[[["self"],["channel"]],["ordering"]]],[11,"cmp","","",1,[[["versionmeta"],["self"]],["ordering"]]],[11,"eq","","",3,[[["self"],["channel"]],["bool"]]],[11,"eq","","",1,[[["versionmeta"],["self"]],["bool"]]],[11,"ne","","",1,[[["versionmeta"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["channel"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",1,[[["versionmeta"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["versionmeta"],["self"]],["bool"]]],[11,"le","","",1,[[["versionmeta"],["self"]],["bool"]]],[11,"gt","","",1,[[["versionmeta"],["self"]],["bool"]]],[11,"ge","","",1,[[["versionmeta"],["self"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"cause","","",2,[[["self"]],[["error"],["option",["error"]]]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"new","","Contructs the simple case without pre or build.",0,[[["u64"]],["version"]]],[11,"parse","","Parse a string into a semver object.",0,[[["str"]],[["result",["version","semvererror"]],["semvererror"],["version"]]]],[11,"increment_patch","","Increments the patch number for this Version (Must be…",0,[[["self"]]]],[11,"increment_minor","","Increments the minor version number for this Version (Must…",0,[[["self"]]]],[11,"increment_major","","Increments the major version number for this Version (Must…",0,[[["self"]]]],[11,"is_prerelease","","Checks to see if the current Version is in pre-release…",0,[[["self"]],["bool"]]]],"p":[[3,"Version"],[3,"VersionMeta"],[4,"Error"],[4,"Channel"]]};
searchIndex["semver"] = {"doc":"Semantic version parsing and comparison.","i":[[3,"Version","semver","Represents a version number conforming to the semantic…",null,null],[12,"major","","The major version, to be incremented on incompatible…",0,null],[12,"minor","","The minor version, to be incremented when functionality is…",0,null],[12,"patch","","The patch version, to be incremented when…",0,null],[12,"pre","","The pre-release version identifier, if one exists.",0,null],[12,"build","","The build metadata, ignored when determining version…",0,null],[3,"VersionReq","","A `VersionReq` is a struct containing a list of predicates…",null,null],[4,"Identifier","","An identifier in the pre-release or build metadata.",null,null],[13,"Numeric","","An identifier that's solely numbers.",1,null],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,null],[4,"SemVerError","","An error type for this crate",null,null],[13,"ParseError","","An error ocurred while parsing.",2,null],[4,"ReqParseError","","A `ReqParseError` is returned from methods which parse a…",null,null],[13,"InvalidVersionRequirement","","The given version requirement is invalid.",3,null],[13,"OpAlreadySet","","You have already provided an operation, such as `=`, `~`,…",3,null],[13,"InvalidSigil","","The sigil you have written is not correct.",3,null],[13,"VersionComponentsMustBeNumeric","","All components of a version must be numeric.",3,null],[13,"InvalidIdentifier","","There was an error parsing an identifier.",3,null],[13,"MajorVersionRequired","","At least a major version is required.",3,null],[13,"UnimplementedVersionRequirement","","An unimplemented version requirement.",3,null],[13,"DeprecatedVersionRequirement","","This form of requirement is deprecated.",3,null],[11,"new","","Contructs the simple case without pre or build.",0,[[["u64"]],["version"]]],[11,"parse","","Parse a string into a semver object.",0,[[["str"]],[["result",["version","semvererror"]],["version"],["semvererror"]]]],[11,"increment_patch","","Increments the patch number for this Version (Must be…",0,[[["self"]]]],[11,"increment_minor","","Increments the minor version number for this Version (Must…",0,[[["self"]]]],[11,"increment_major","","Increments the major version number for this Version (Must…",0,[[["self"]]]],[11,"is_prerelease","","Checks to see if the current Version is in pre-release…",0,[[["self"]],["bool"]]],[11,"any","","`any()` is a factory method which creates a `VersionReq`…",4,[[],["versionreq"]]],[11,"parse","","`parse()` is the main constructor of a `VersionReq`. It…",4,[[["str"]],[["result",["versionreq","reqparseerror"]],["versionreq"],["reqparseerror"]]]],[11,"exact","","`exact()` is a factory method which creates a `VersionReq`…",4,[[["version"]],["versionreq"]]],[11,"matches","","`matches()` matches a given `Version` against this…",4,[[["self"],["version"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["identifier"]],["identifier"]]],[11,"from","","",0,[[["version"]],["version"]]],[11,"from","","",0,[[],["version"]]],[11,"from","","",4,[[["versionreq"]],["versionreq"]]],[11,"from","","",3,[[["string"]],["reqparseerror"]]],[11,"clone","","",1,[[["self"]],["identifier"]]],[11,"clone","","",0,[[["self"]],["version"]]],[11,"clone","","",2,[[["self"]],["semvererror"]]],[11,"clone","","",4,[[["self"]],["versionreq"]]],[11,"clone","","",3,[[["self"]],["reqparseerror"]]],[11,"cmp","","",1,[[["self"],["identifier"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["version"]],["ordering"]]],[11,"cmp","","",4,[[["versionreq"],["self"]],["ordering"]]],[11,"eq","","",1,[[["self"],["identifier"]],["bool"]]],[11,"ne","","",1,[[["self"],["identifier"]],["bool"]]],[11,"eq","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"ne","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"eq","","",0,[[["self"],["version"]],["bool"]]],[11,"eq","","",4,[[["versionreq"],["self"]],["bool"]]],[11,"ne","","",4,[[["versionreq"],["self"]],["bool"]]],[11,"eq","","",3,[[["reqparseerror"],["self"]],["bool"]]],[11,"ne","","",3,[[["reqparseerror"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["identifier"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["identifier"]],["bool"]]],[11,"le","","",1,[[["self"],["identifier"]],["bool"]]],[11,"gt","","",1,[[["self"],["identifier"]],["bool"]]],[11,"ge","","",1,[[["self"],["identifier"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["semvererror"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"le","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"gt","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"ge","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["version"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",4,[[["versionreq"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",4,[[["versionreq"],["self"]],["bool"]]],[11,"le","","",4,[[["versionreq"],["self"]],["bool"]]],[11,"gt","","",4,[[["versionreq"],["self"]],["bool"]]],[11,"ge","","",4,[[["versionreq"],["self"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",0,[[["str"]],[["result",["version","semvererror"]],["version"],["semvererror"]]]],[11,"from_str","","",4,[[["str"]],[["result",["versionreq","reqparseerror"]],["versionreq"],["reqparseerror"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"description","","",3,[[["self"]],["str"]]]],"p":[[3,"Version"],[4,"Identifier"],[4,"SemVerError"],[4,"ReqParseError"],[3,"VersionReq"]]};
searchIndex["semver_parser"] = {"doc":"","i":[[0,"version","semver_parser","",null,null],[3,"Version","semver_parser::version","",null,null],[12,"major","","",0,null],[12,"minor","","",0,null],[12,"patch","","",0,null],[12,"pre","","",0,null],[12,"build","","",0,null],[4,"Identifier","","",null,null],[13,"Numeric","","An identifier that's solely numbers.",1,null],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,null],[5,"parse","","",null,[[["str"]],[["result",["version","string"]],["string"],["version"]]]],[0,"range","semver_parser","",null,null],[3,"VersionReq","semver_parser::range","",null,null],[12,"predicates","","",2,null],[3,"Predicate","","",null,null],[12,"op","","",3,null],[12,"major","","",3,null],[12,"minor","","",3,null],[12,"patch","","",3,null],[12,"pre","","",3,null],[4,"WildcardVersion","","",null,null],[13,"Major","","",4,null],[13,"Minor","","",4,null],[13,"Patch","","",4,null],[4,"Op","","",null,null],[13,"Ex","","",5,null],[13,"Gt","","",5,null],[13,"GtEq","","",5,null],[13,"Lt","","",5,null],[13,"LtEq","","",5,null],[13,"Tilde","","",5,null],[13,"Compatible","","",5,null],[13,"Wildcard","","",5,null],[5,"parse_predicate","","",null,[[["str"]],[["string"],["result",["predicate","string"]],["predicate"]]]],[5,"parse","","",null,[[["str"]],[["string"],["result",["versionreq","string"]],["versionreq"]]]],[11,"from","semver_parser::version","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","semver_parser::range","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"clone","semver_parser::version","",0,[[["self"]],["version"]]],[11,"clone","","",1,[[["self"]],["identifier"]]],[11,"eq","","",0,[[["self"],["version"]],["bool"]]],[11,"ne","","",0,[[["self"],["version"]],["bool"]]],[11,"eq","","",1,[[["self"],["identifier"]],["bool"]]],[11,"ne","","",1,[[["self"],["identifier"]],["bool"]]],[11,"eq","semver_parser::range","",4,[[["self"],["wildcardversion"]],["bool"]]],[11,"eq","","",5,[[["op"],["self"]],["bool"]]],[11,"ne","","",5,[[["op"],["self"]],["bool"]]],[11,"eq","","",3,[[["predicate"],["self"]],["bool"]]],[11,"ne","","",3,[[["predicate"],["self"]],["bool"]]],[11,"fmt","semver_parser::version","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","semver_parser::range","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","semver_parser::version","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"from_str","semver_parser::range","",5,[[["str"]],[["op"],["string"],["result",["op","string"]]]]]],"p":[[3,"Version"],[4,"Identifier"],[3,"VersionReq"],[3,"Predicate"],[4,"WildcardVersion"],[4,"Op"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);